{"version":3,"sources":["components/calendar/index.js","components/reminder/form.js","components/reminder/content.js","containers/index.js","App.js","serviceWorker.js","index.js"],"names":["Month","props","react_default","a","createElement","Fragment","className","onClick","gotoprevmonth","currentmonth","currentyear","gotonextmonth","weekday","days","addZero","input","getRandomColor","color","i","Math","floor","random","Reminderform","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","day","id","filteredreminder","_id","note","hour","datetime","Moment","format","minute","ampm","isedit","changeHandler","bind","assertThisInitialized","submitForm","editForm","cancelForm","event","name","target","value","setState","defineProperty","_this2","preventDefault","formdata","objectSpread","Axios","post","then","response","fetchreminders","_this3","put","toggleform","hourOptions","push","key","minuteOptions","type","placeholder","onChange","Component","Reminder","style","background","reminder","draggable","onDragStart","ondragstart","title","deletereminder","editreminder","Calendar","current","clickedday","reminders","gotoPrevMonth","gotoNextMonth","showreminderForm","fetchReminders","deleteReminder","onDrop","prevState","prevProps","subtract","add","isEdit","arguments","length","undefined","parseInt","getAttribute","_this4","startOfMonth","startOf","endOfMonth","endOf","get","concat","result","data","_this5","delete","filter","dataTransfer","setData","_this6","getData","set","_this7","currentMonth","currentmonthName","currentYear","numberofdaysinMonth","weekdayHeader","daysBody","today","Date","usedWidth","_loop","datestring","getDay","width","getDate","getMonth","getFullYear","filteredreminders","onDragOver","map","index","content","reminder_form","monthEndDay","calendar","App","containers","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0e92c03.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nlet Month = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"calendar-header\">\r\n\t\t        <div className=\"calendar-prevmonth\">\r\n\t\t            <span className=\"glyphicon glyphicon-menu-left\" onClick={props.gotoprevmonth}></span>\r\n\t\t        </div>\r\n\t\t        <div className=\"calendar-currentmonth\">\r\n\t\t        \t{props.currentmonth}, {props.currentyear}\r\n\t\t        </div>\r\n\t\t        <div className=\"calendar-nextmonth\">\r\n\t\t            <span className=\"glyphicon glyphicon-menu-right\" onClick={props.gotonextmonth}></span>\r\n\t\t        </div>\r\n\t        </div>\r\n\t\t\t<div className=\"weeks\">\r\n\t\t\t\t{props.weekday}\r\n\t\t\t</div>\r\n\t        <div className=\"days\">\r\n\t        \t{props.days}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Month;","import React, {Component} from 'react';\r\nimport Moment from 'moment';\r\nimport Axios from 'axios';\r\n\r\nclass Reminderform extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tday : this.props.day,\r\n\t\t\tid :  typeof this.props.filteredreminder._id !== \"undefined\" ? this.props.filteredreminder._id : \"\",\r\n\t\t\tnote : typeof this.props.filteredreminder.note !== \"undefined\" ? this.props.filteredreminder.note : \"\",\r\n\t\t\thour : typeof this.props.filteredreminder.datetime !== \"undefined\" ? Moment(this.props.filteredreminder.datetime).format(\"hh\") : Moment().format(\"hh\"),\r\n\t\t\tminute : typeof this.props.filteredreminder.datetime !== \"undefined\" ? Moment(this.props.filteredreminder.datetime).format(\"mm\") : Moment().format(\"mm\"),\r\n\t\t\tampm : typeof this.props.filteredreminder.datetime !== \"undefined\" ? Moment(this.props.filteredreminder.datetime).format(\"A\") : Moment().format(\"A\"),\r\n\t\t\tcolor : typeof this.props.filteredreminder.color !== \"undefined\" ? this.props.filteredreminder.color : getRandomColor(),\r\n\t\t\tisedit : typeof this.props.filteredreminder._id !== \"undefined\" ? true : false\r\n\t\t}\r\n\r\n\t\tthis.changeHandler = this.changeHandler.bind(this);\r\n\t\tthis.submitForm = this.submitForm.bind(this);\r\n\t\tthis.editForm = this.editForm.bind(this);\r\n\t\tthis.cancelForm = this.cancelForm.bind(this);\r\n\t}\r\n\r\n\tchangeHandler(event){\r\n\r\n      const name = event.target.name;\r\n      const value = event.target.value;\r\n\r\n      this.setState({\r\n          [name] : value\r\n      });\r\n  \t}\r\n\r\n  \tsubmitForm(event){\r\n  \t\tevent.preventDefault();\r\n\r\n  \t\tlet formdata = {...this.state};\r\n\r\n  \t\tAxios.post('http://localhost:30001/reminders/add',{\r\n  \t\t\tnote : formdata.note,\r\n  \t\t\tdatetime : formdata.day + \" \" + formdata.hour + \":\" + formdata.minute + \" \" + formdata.ampm,\r\n  \t\t\tcolor : formdata.color\r\n  \t\t}).then((response) => this.props.fetchreminders());\r\n  \t}\r\n\r\n  \teditForm(event){\r\n  \t\tevent.preventDefault();\r\n\r\n  \t\tlet formdata = {...this.state};\r\n\r\n  \t\tAxios.put('http://localhost:30001/reminders/edit/'+formdata.id,{\r\n  \t\t\tnote : formdata.note,\r\n  \t\t\tdatetime : formdata.day + \" \" + formdata.hour + \":\" + formdata.minute + \" \" + formdata.ampm\r\n  \t\t}).then((response) => this.props.fetchreminders());\r\n  \t}\r\n\r\n  \tcancelForm(event){\r\n  \t\tevent.preventDefault();\r\n\r\n  \t\tthis.props.toggleform();\r\n  \t}\r\n\r\n\trender(){\r\n\r\n\t\tlet hourOptions = [];\r\n\r\n\t\tfor(let i=1;i<=12;i++){\r\n\t\t\thourOptions.push(<option value={addZero(i)} key={i}>{addZero(i)}</option>);\r\n\t\t}\r\n\r\n\t\tlet minuteOptions = [];\r\n\r\n\t\tfor(let i=0;i<=59;i++){\r\n\t\t\tminuteOptions.push(<option value={addZero(i)} key={i}>{addZero(i)}</option>);\r\n\t\t}\r\n\t\treturn (\r\n\t\t      <form className=\"reminder-form\">\r\n\t\t        <div className=\"form-group\">\r\n\t\t          <textarea type=\"text\" name=\"note\" placeholder=\"Add Reminder...\" className=\"form-control\" value={this.state.note} onChange={this.changeHandler}/>\r\n\t\t        </div>\r\n\t\t        <div className=\"form-group\">\r\n\t\t        \t<select className=\"hourselect\" name=\"hour\" value={this.state.hour} onChange={this.changeHandler}>\r\n\t\t\t       \t\t{hourOptions}\r\n\t\t        \t</select>\r\n\t\t        \t{\" : \"}\r\n\t\t        \t<select className=\"minuteselect\" name=\"minute\" value={this.state.minute} onChange={this.changeHandler}>\r\n\t\t\t       \t\t{minuteOptions}\r\n\t\t        \t</select>\r\n\t\t        \t{\"  \"}\r\n\t\t        \t<select className=\"ampmselect\" name=\"ampm\" value={this.state.ampm} onChange={this.changeHandler}>\r\n\t\t\t       \t\t<option value=\"AM\">AM</option>\r\n\t\t\t       \t\t<option value=\"PM\">PM</option>\r\n\t\t        \t</select>\r\n\t\t        </div>\r\n\t\t        <button className=\"btn btn-default add\" onClick={this.state.isedit ? this.editForm : this.submitForm}>{ this.state.isedit ? \"Edit\" : \"Add\"}</button>\r\n\t\t        <button className=\"btn btn-default cancel\" onClick={this.cancelForm}>Cancel</button>\r\n\t\t      </form>\r\n\t\t  );\r\n\t}\r\n}\r\n\r\nfunction addZero(input){\r\n\treturn (input < 10 ? \"0\" : \"\")+input;\r\n}\r\n\r\nfunction getRandomColor() {\r\n\r\n  let letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n\r\n  return color;\r\n}\r\n\r\nexport default Reminderform;","import React from 'react';\r\n\r\nimport Moment from 'moment';\r\n\r\nlet Reminder = (props) => {\r\n  return (\r\n  \t<div className=\"reminder-details draggable\" style={{background : props.reminder.color}} draggable onDragStart = {(event) => props.ondragstart(event, props.reminder._id)} title={props.reminder.note}>\r\n\t    <div className=\"reminder-actions\">\r\n\t        <button className=\"glyphicon glyphicon-remove\" onClick={() => props.deletereminder(props.reminder._id)}></button>\r\n\t        <button className=\"glyphicon glyphicon-edit\" onClick={(event) => props.editreminder(event,true)} day={Moment(props.reminder.datetime).format(\"D\")} id={props.reminder._id}></button>\r\n\t    </div>\r\n      \t<span className=\"reminder-note\">{props.reminder.note}</span>\r\n      \t<span className=\"reminder-time\">{Moment(props.reminder.datetime).format(\"hh:mm A\")}</span>\r\n  \t</div>\r\n  );\r\n};\r\n\r\nexport default Reminder;","import React, { Component } from 'react';\r\n\r\nimport Axios from 'axios';\r\nimport Moment from 'moment';\r\n\r\nimport '../styles/index.css';\r\nimport '../styles/bootstrap.css';\r\n\r\nimport Month from '../components/calendar/index.js';\r\nimport Reminderform from '../components/reminder/form.js';\r\nimport Reminder from '../components/reminder/content.js';\r\n\r\nlet weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n\r\nclass Calendar extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      current : Moment(),\r\n      toggleform : false,\r\n      clickedday : 0,\r\n      reminders : [],\r\n      id : \"\"\r\n    }\r\n\r\n    this.gotoPrevMonth = this.gotoPrevMonth.bind(this);\r\n    this.gotoNextMonth = this.gotoNextMonth.bind(this);\r\n    this.showreminderForm = this.showreminderForm.bind(this);\r\n    this.fetchReminders = this.fetchReminders.bind(this);\r\n    this.toggleform = this.toggleform.bind(this);\r\n    this.deleteReminder = this.deleteReminder.bind(this);\r\n    this.onDragStart = this.onDragStart.bind(this);\r\n    this.onDrop = this.onDrop.bind(this);\r\n  }\r\n\r\n  gotoPrevMonth(){\r\n    this.setState((prevState,prevProps) => {\r\n\r\n      let state = {...prevState};\r\n\r\n      let current = state.current;\r\n      current = Moment(current).subtract(1,'month');\r\n\r\n      return {\r\n        current : current\r\n      }\r\n    },() => this.fetchReminders());\r\n  }\r\n\r\n  gotoNextMonth(){\r\n    this.setState((prevState,prevProps) => {\r\n\r\n      let state = {...prevState};\r\n\r\n      let current = state.current;\r\n      current =  Moment(current).add(1,'months');\r\n\r\n      return {\r\n        current : current\r\n      }\r\n    },() => this.fetchReminders());\r\n  }\r\n\r\n  showreminderForm(event,isEdit = false){\r\n    this.setState({\r\n      toggleform : true,\r\n      clickedday : parseInt(event.target.getAttribute(\"day\")),\r\n      isEdit : isEdit,\r\n      id : event.target.id\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchReminders();\r\n  }\r\n\r\n  fetchReminders(){\r\n    let startOfMonth = this.state.current.startOf('month').format('YYYY-MM-DD');\r\n    let endOfMonth   = this.state.current.endOf('month').format('YYYY-MM-DD');\r\n\r\n    Axios.get(`http://localhost:30001/reminders/fetch/${startOfMonth}/${endOfMonth}`)\r\n    .then((result) => {\r\n        this.setState({\r\n          reminders : result.data.data.reminders,\r\n          toggleform : false,\r\n          clickedday : 0,\r\n          id : \"\"\r\n        });\r\n    });\r\n  }\r\n\r\n  deleteReminder(id){\r\n    Axios.delete('http://localhost:30001/reminders/delete/'+id)\r\n    .then((result) => {\r\n      let reminders = this.state.reminders.filter((reminder) => reminder._id !== id);\r\n\r\n      this.setState({\r\n        reminders : reminders\r\n      });\r\n    });\r\n  }\r\n\r\n  toggleform(){\r\n    this.setState({\r\n      toggleform : false,\r\n      clickedday : 0,\r\n      id : \"\"\r\n    });\r\n  }\r\n\r\n  onDragStart(event,id){\r\n    event.dataTransfer.setData(\"id\", id);\r\n  }\r\n\r\n  onDragOver(event){\r\n    event.preventDefault();\r\n  }\r\n\r\n  onDrop(event, day){\r\n     let id = event.dataTransfer.getData(\"id\");\r\n\r\n     let reminder = this.state.reminders.filter((reminder) => reminder._id === id);\r\n\r\n     reminder = reminder[0];\r\n\r\n     reminder.datetime = Moment(reminder.datetime).set(\"date\",day);\r\n\r\n     Axios.put('http://localhost:30001/reminders/edit/'+id,{\r\n        note : reminder.note,\r\n        datetime : reminder.datetime.format(\"YYYY-MM-DD HH:mm:ss\")\r\n      }).then((response) => this.fetchReminders());\r\n  }\r\n\r\n  render() {\r\n\r\n    let current = this.state.current;\r\n\r\n    let currentMonth = parseInt(current.format('M')) - 1 ;\r\n\r\n    let currentmonthName = current.format('MMMM');\r\n\r\n    let currentYear = parseInt(current.format('YYYY'));\r\n\r\n    let numberofdaysinMonth = current.endOf('month').format('D');\r\n\r\n    let weekdayHeader = [];\r\n\r\n    for(let i = 0; i < 7; i++){\r\n      weekdayHeader.push(<div className=\"weekday-header\" key={i}>{weekday[i]}</div>);\r\n    }\r\n\r\n    let daysBody = [];\r\n\r\n    let today = new Date();\r\n\r\n    let usedWidth = 1;\r\n\r\n    for(let i=1;i<=numberofdaysinMonth;i++){\r\n\r\n      let datestring = Moment(new Date(currentYear,currentMonth,i)).format(\"YYYY-MM-DD\");\r\n\r\n      let day = (new Date(currentYear,currentMonth,i)).getDay();\r\n\r\n      let className = \"month-body\";\r\n\r\n      if(i === 1 && day !== 0){\r\n\r\n        let style = {\r\n          width : (day)*14+\"%\"\r\n        }\r\n\r\n        daysBody.push(<div className={\"unusedview \" + className+\" rowfirst\"} style={style} key={0}></div>);\r\n\r\n        usedWidth = usedWidth*(day)*14;\r\n      }\r\n\r\n      if(today.getDate() === i && today.getMonth() === currentMonth && today.getFullYear() === currentYear){\r\n        className += \" today\";\r\n      }\r\n\r\n      usedWidth += 14;\r\n\r\n      let filteredreminders = this.state.clickedday !== i ? this.state.reminders.filter((reminder) => Moment(reminder.datetime).format(\"YYYY-MM-DD\") === datestring ) : [];\r\n\r\n      let filteredreminder = this.state.toggleform && this.state.clickedday === i && this.state.id !== \"\" ? this.state.reminders.filter((reminder) => reminder._id === this.state.id) : [];\r\n\r\n      filteredreminder = filteredreminder.length === 1 ? filteredreminder[0] : {};\r\n\r\n      daysBody.push(\r\n        <div className={ \"monthview \" + className+ ( usedWidth === 112 || usedWidth === 210 || usedWidth === 308 || usedWidth === 406 || usedWidth === 504 ? \" rowfirst\" : \"\")}\r\n             key={i} onDragOver={(event) => this.onDragOver(event)} onDrop={(event) => this.onDrop(event,i)}\r\n        >\r\n          <div className=\"dayvalue\">{i}</div>\r\n          {filteredreminders.map((reminder,index) => { return (<Reminder key={index} reminder={reminder} editreminder={this.showreminderForm} deletereminder={this.deleteReminder} ondragstart={this.onDragStart} />)})}\r\n          {\r\n            this.state.toggleform && this.state.clickedday === i\r\n            ? <Reminderform day={datestring} fetchreminders={this.fetchReminders} filteredreminder={filteredreminder} toggleform={this.toggleform}></Reminderform>\r\n            : (\r\n               this.state.toggleform\r\n               ? \"\"\r\n               : <button className=\"addReminder\" day={i} id=\"\" onClick={this.showreminderForm}>+</button>\r\n              )\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let monthEndDay = (new Date(currentYear,currentMonth,numberofdaysinMonth)).getDay();\r\n\r\n    if(monthEndDay !== 6){\r\n\r\n      let style = {\r\n        width : (6-monthEndDay)*14+\"%\"\r\n      }\r\n\r\n      daysBody.push(<div className=\"unusedview month-body\" key={numberofdaysinMonth+1} style={style}></div>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Month\r\n            gotoprevmonth = {this.gotoPrevMonth}\r\n            gotonextmonth = {this.gotoNextMonth}\r\n            currentmonth = {currentmonthName}\r\n            currentyear = {currentYear}\r\n            weekday = {weekdayHeader}\r\n            days = {daysBody}\r\n          >\r\n          </Month>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Month from './containers/index.js';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Month/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}